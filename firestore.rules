rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and create appointments
    match /appointments/{appointmentId} {
      allow read: if request.auth != null && (
        resource.data.patientId == request.auth.uid || 
        resource.data.doctorId == request.auth.uid
      );
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (
        resource.data.patientId == request.auth.uid || 
        resource.data.doctorId == request.auth.uid
      );
    }
    
    // For admin access, check if the user has admin role
    match /users/{userId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Doctor schedules
    match /schedules/{scheduleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'doctor';
    }
  }
}
